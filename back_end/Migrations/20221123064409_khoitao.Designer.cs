// <auto-generated />
using Doan.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Doan.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221123064409_khoitao")]
    partial class khoitao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Doan.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Men's Clothing"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Women's Clothing"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Jewelery"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("Doan.Entities.Color", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Purple"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Green"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Red"
                        },
                        new
                        {
                            ID = 5,
                            Name = "White"
                        });
                });

            modelBuilder.Entity("Doan.Entities.GeneralProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("GeneralProducts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Count = 259,
                            Description = "Slim-fitting style, contrast raglan long sleeve, three-button henley placket, light weight & soft fabric for breathable and comfortable wearing. And Solid stitched shirts with round neck made for durability and a great fit for casual fashion wear and diehard baseball fans. The Henley style round neckline includes a three-button placket.",
                            Ima = "",
                            Name = "Mens Casual Premium Slim Fit T-Shirts ",
                            Price = 22,
                            Rate = 4.0999999999999996,
                            Title = "Men"
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            Count = 500,
                            Description = "great outerwear jackets for Spring/Autumn/Winter",
                            Ima = "",
                            Name = "Mens Cotton Jacket ",
                            Price = 22,
                            Rate = 4.7000000000000002,
                            Title = "Men"
                        });
                });

            modelBuilder.Entity("Doan.Entities.Size", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "s"
                        },
                        new
                        {
                            ID = 2,
                            Name = "m"
                        },
                        new
                        {
                            ID = 3,
                            Name = "l"
                        },
                        new
                        {
                            ID = 4,
                            Name = "xl"
                        });
                });

            modelBuilder.Entity("Doan.Entities.SubTable.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<int>("SizeID")
                        .HasColumnType("int");

                    b.Property<string>("Ima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "ColorID", "SizeID");

                    b.HasIndex("ColorID");

                    b.HasIndex("SizeID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ColorID = 1,
                            SizeID = 1,
                            Ima = "",
                            Stock = 2
                        },
                        new
                        {
                            ProductID = 1,
                            ColorID = 1,
                            SizeID = 2,
                            Ima = "",
                            Stock = 1
                        },
                        new
                        {
                            ProductID = 1,
                            ColorID = 2,
                            SizeID = 3,
                            Ima = "",
                            Stock = 5
                        },
                        new
                        {
                            ProductID = 2,
                            ColorID = 1,
                            SizeID = 2,
                            Ima = "",
                            Stock = 1
                        });
                });

            modelBuilder.Entity("Doan.Entities.GeneralProduct", b =>
                {
                    b.HasOne("Doan.Entities.Category", "Category")
                        .WithMany("GeneralProducts")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Doan.Entities.SubTable.Product", b =>
                {
                    b.HasOne("Doan.Entities.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Doan.Entities.GeneralProduct", "GeneralProduct")
                        .WithMany("Products")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Doan.Entities.Size", "Size")
                        .WithMany("Products")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("GeneralProduct");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Doan.Entities.Category", b =>
                {
                    b.Navigation("GeneralProducts");
                });

            modelBuilder.Entity("Doan.Entities.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Doan.Entities.GeneralProduct", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Doan.Entities.Size", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
